plugins {
  alias(libs.plugins.vanniktech.maven.publish)
}
dependencies {
  implementation libs.commercetools.java.api
  implementation libs.commercetools.java.importapi
  implementation libs.jackson.core
  implementation libs.guava
  implementation libs.slf4j


  testImplementation libs.junit.jupiter.api
  testImplementation libs.junit.jupiter.params
  testImplementation libs.mockito.junit.jupiter
  testImplementation libs.assertj.core
  testImplementation libs.testcontainers.mockserver
  testImplementation libs.mockserver.client
  testImplementation libs.testcontainers.junit.jupiter

  testRuntimeOnly libs.junit.jupiter.engine
  testRuntimeOnly libs.junit.platform.launcher
  testRuntimeOnly libs.logback
  runtimeOnly libs.commercetools.okhttp.client4
}

mavenPublishing {
  publishToMavenCentral()
  signAllPublications()
  coordinates("tech.bison", "commercetools-datalift-core", "${project.version}")

  pom {
    name = "commercetools Datalift Core"
    description = "commercetools Datalift is a data migration tool for commercetools."
    inceptionYear = "2024"
    url = "https://github.com/BisonSchweizAG/commercetools-datalift"
    licenses {
      license {
        name = "The Apache License, Version 2.0"
        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
        distribution = "http://www.apache.org/licenses/LICENSE-2.0.txt"
      }
    }
    developers {
      developer {
        id = "BisonSchweizAG"
        name = "Bison Schweiz AG"
        url = "https://github.com/BisonSchweizAG"
      }
    }
    scm {
      url = "https://github.com/BisonSchweizAG/commercetools-datalift"
      connection = "scm:git:git://github.com/BisonSchweizAG/commercetools-datalift.git"
      developerConnection = "scm:git:ssh://git@github.com/BisonSchweizAG/commercetools-datalift.git"
    }
  }

  afterEvaluate {
    publishing {
      publications {
        maven(MavenPublication) {
          artifact(file("$buildDir/reports/bom.json")) {
            classifier = "sbom"
            extension = "json"
          }
        }
      }
    }
  }
}

test {
  testLogging {
    events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
  }
  useJUnitPlatform()
}
