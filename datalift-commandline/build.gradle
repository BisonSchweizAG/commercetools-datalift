plugins {
  id 'application'
  id 'maven-publish'
  alias(libs.plugins.jreleaser)
}

application {
  mainClass = 'tech.bison.datalift.commandline.Main'
}

java {
  withJavadocJar()
  withSourcesJar()
}

jreleaser {
  project {
    version = "${project.version}"
    gitRootSearch = true
    description = 'Command line interface for Datalift.'
    authors = ['BisonSchweizAG']
    license = 'Apache-2.0'
    inceptionYear = '2024'
    website = 'https://github.com/BisonSchweizAG/datalift'
    docsUrl = 'https://github.com/BisonSchweizAG/datalift'
  }

  signing {
    active = 'ALWAYS'
    armored = true
  }

  release {
    github {
      repoOwner = 'BisonSchweizAG'
      overwrite = true
    }
  }
  deploy {
    maven {
      mavenCentral {
        sonatype {
          active = 'ALWAYS'
          url = 'https://central.sonatype.com/api/v1/publisher'
          stagingRepository('target/staging-deploy')
        }
      }
    }
  }
}

publishing {
  publications {
    maven(MavenPublication) {
      groupId = 'io.github.studix'
      artifactId = 'datalift-commandline'

      from components.java
      artifact source: distZip

      pom {
        name = "Datalift CLI"
        description = "Command line interface for Datalift."
        inceptionYear = "2024"
        url = "https://github.com/BisonSchweizAG/datalift"
        licenses {
          license {
            name = "The Apache License, Version 2.0"
            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution = "http://www.apache.org/licenses/LICENSE-2.0.txt"
          }
        }
        developers {
          developer {
            id = "BisonSchweizAG"
            name = "Bison Schweiz AG"
            url = "https://github.com/BisonSchweizAG"
          }
        }
        scm {
          url = "https://github.com/BisonSchweizAG/datalift"
          connection = "scm:git:git://github.com/BisonSchweizAG/datalift.git"
          developerConnection = "scm:git:ssh://git@github.com/BisonSchweizAG/datalift.git"
        }
      }
    }
  }

  repositories {
    maven {
      url = layout.buildDirectory.dir('staging-deploy')
    }
  }
}

dependencies {
  implementation project(':datalift-core')
  implementation libs.picocli
  implementation libs.slf4j

  testImplementation libs.junit.jupiter.api
  testImplementation libs.junit.jupiter.params
  testImplementation libs.mockito.junit.jupiter

  testRuntimeOnly libs.junit.jupiter.engine
  runtimeOnly libs.commercetools.okhttp.client4
  runtimeOnly libs.logback
}

test {
  useJUnitPlatform()
}
