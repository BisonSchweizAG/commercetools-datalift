import com.vanniktech.maven.publish.SonatypeHost

plugins {
  alias(libs.plugins.vanniktech.maven.publish)
  id 'application'
}

application {
  mainClass = 'tech.bison.datalift.commandline.Main'
}

mavenPublishing {
  publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL, true)
  signAllPublications()
  coordinates("io.github.studix", "commercetools-datalift-commandline", "${project.version}")

  pom {
    name = "commercetools Datalift command line interface"
    description = "Command line interface for commercetools Datalift."
    inceptionYear = "2024"
    url = "https://github.com/BisonSchweizAG/commercetools-datalift"
    licenses {
      license {
        name = "The Apache License, Version 2.0"
        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
        distribution = "http://www.apache.org/licenses/LICENSE-2.0.txt"
      }
    }
    developers {
      developer {
        id = "BisonSchweizAG"
        name = "Bison Schweiz AG"
        url = "https://github.com/BisonSchweizAG"
      }
    }
    scm {
      url = "https://github.com/BisonSchweizAG/commercetools-datalift"
      connection = "scm:git:git://github.com/BisonSchweizAG/commercetools-datalift.git"
      developerConnection = "scm:git:ssh://git@github.com/BisonSchweizAG/commercetools-datalift.git"
    }
  }
}

dependencies {
  implementation project(':datalift-core')
  implementation libs.picocli
  implementation libs.slf4j

  testImplementation libs.junit.jupiter.api
  testImplementation libs.junit.jupiter.params
  testImplementation libs.mockito.junit.jupiter

  testRuntimeOnly libs.junit.jupiter.engine
  runtimeOnly libs.commercetools.okhttp.client4
  runtimeOnly libs.logback
}

test {
  useJUnitPlatform()
}
